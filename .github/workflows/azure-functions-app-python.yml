# This workflow will build a Python app and deploy it to an Azure Functions App on Linux when a commit is pushed to your default branch.当提交被推送到默认分支时，该工作流将构建一个Python应用程序并将其部署到Linux上的Azure Functions应用程序。
#
# This workflow assumes you have already created the target Azure Functions app.#此工作流假设您已经创建了目标Azure Functions应用程序。
# For instructions see https://learn.microsoft.com/en-us/azure/azure-functions/create-first-function-vs-code-python?pivots=python-mode-configuration#有关说明，请参阅https://learn.microsoft.com/en-us/azure/azure-functions/create-first-function-vs-code-python?pivots=python-mode-configuration
#
# To configure this workflow:#要配置这个工作流:
# 1. Set up the following secrets in your repository:# 1。在您的存储库中设置以下秘密:
#   - AZURE_FUNCTIONAPP_PUBLISH_PROFILE# - azure_functionapp_publish_profile . #
# 2. Change env variables for your configuration.# 2。为您的配置更改环境变量。
#
# For more information on:#了解更多信息:
#   - GitHub Actions for Azure: https://github.com/Azure/Actions# - Azure的GitHub动作:https://github.com/Azure/Actions

#   - Azure Functions Action: https://github.com/Azure/functions-action# - Azure功能操作:https://github.com/Azure/functions-action
#   - Publish Profile: https://github.com/Azure/functions-action#using-publish-profile-as-deployment-credential-recommended# -发布配置文件:https://github.com/Azure/functions-action#using-publish-profile-as-deployment-credential-recommended
#   - Azure Service Principal for RBAC: https://github.com/Azure/functions-action#using-azure-service-principal-for-rbac-as-deployment-credentialRBAC的Azure服务主体:https://github.com/Azure/functions-action#using-azure-service-principal-for-rbac-as-deployment-credential
#
# For more samples to get started with GitHub Action workflows to deploy to Azure: https://github.com/Azure/actions-workflow-samples/tree/master/FunctionApp#要了解更多示例，以开始使用GitHub Action工作流部署到Azure: https://github.com/Azure/actions-workflow-samples/tree/master/FunctionApp

name: Deploy Python project to Azure Function App将Python项目部署到Azure Function App

on:
  push:
    branches: ["master"]

env:
  AZURE_FUNCTIONAPP_NAME: 'your-app-name'   # set this to your function app name on AzureAZURE_FUNCTIONAPP_NAME: 'your-app-name' #将其设置为Azure上的函数应用程序名称
  AZURE_FUNCTIONAPP_PACKAGE_PATH: '.'       # set this to the path to your function app project, defaults to the repository rootAZURE_FUNCTIONAPP_PACKAGE_PATH:”。#将此设置为function app项目的路径，默认为存储库根目录
  PYTHON_VERSION: '3.9'                     # set this to the python version to use (e.g. '3.6', '3.7', '3.8')PYTHON_VERSION: '3.9' #将此设置为要使用的python版本。'3.6'， '3.7'， '3.8')

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest   上运行:ubuntu-latest
    environment: dev   环境:开发
    steps:
    - name: 'Checkout GitHub Action'
      uses: actions/checkout@v4   用途:行动/ checkout@v4

    # If you want to use Azure RBAC instead of Publish Profile, then uncomment the task below
    # - name: 'Login via Azure CLI'
    #   uses: azure/login@v1
    #   with:
    #     creds: ${{ secrets.AZURE_RBAC_CREDENTIALS }} # set up AZURE_RBAC_CREDENTIALS secrets in your repository

    - name: Setup Python ${{ env.PYTHON_VERSION }} Environment
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: 'Resolve Project Dependencies Using Pip'
      shell: bash
      run: |
        pushd './${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}'
        python -m pip install --upgrade pip
        pip install -r requirements.txt --target=".python_packages/lib/site-packages"
        popd

    - name: 'Run Azure Functions Action'
      uses: Azure/functions-action@v1
      id: fa
      with:
        app-name: ${{ env.AZURE_FUNCTIONAPP_NAME }}
        package: ${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}
        publish-profile: ${{ secrets.AZURE_FUNCTIONAPP_PUBLISH_PROFILE }} # Remove publish-profile to use Azure RBAC
        scm-do-build-during-deployment: true
        enable-oryx-build: true
